{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Container/Container.module.css","redux/items/items-actions.js","redux/items/items-reducer.js","redux/filter/filter-actions.js","redux/filter/filter-reducer.js","redux/store.js","services/api.js","redux/items/items-operations.js","redux/items/items-selectors.js","components/Filter/Filter.js","components/Section/Section.js","components/Container/Container.js","components/AddContactForm/AddContactForm.js","components/ContactsList/ContactsList.js","App.js","index.js","components/AddContactForm/AddContactForm.module.css"],"names":["module","exports","fetchAllContactsRequest","createAction","fetchAllContactsSuccess","fetchAllContactsError","addNewContactRequest","addNewContactSuccess","addNewContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","itemsReduser","createReducer","state","payload","console","log","filter","contact","id","isLoadingReduser","changeFilter","filterReduser","_","contactsReduser","combineReducers","items","isLoading","rootReducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","fetchAllContacts","a","axios","get","data","defaults","baseURL","addContact","dispatch","post","addNewContact","then","catch","error","deleteContact","contactId","delete","getContactsFilter","getContactsIsLoading","isLoadong","getContactsFilteredItems","createSelector","normalizedFilter","toLowerCase","name","includes","Filter","value","onChange","className","s","text","type","Section","normalizedTitle","t","toUpperCase","slice","this","props","title","children","section","Component","Container","container","AddContactForm","number","nameInputId","uuidv4","numberInputId","handleChange","target","setState","handleSubmit","e","onSubmit","preventDefault","find","alert","addContactForm","formItem","htmlFor","placeholder","disabled","formBtn","btnText","ContactsList","onDeleteContact","list","length","map","contactItem","contactData","onClick","connect","onAddContact","onChangeFilter","useDispatch","useEffect","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6bd4405.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3-vez\",\"contactItem\":\"ContactsList_contactItem__UrwAW\",\"contactData\":\"ContactsList_contactData__8yvDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__W3PfY\",\"text\":\"Filter_text__Euks6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__TQ6l8\",\"section\":\"Section_section__3qAtx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__5yws8\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchAllContactsRequest = createAction(\r\n  'fetchAllContactsRequest',\r\n);\r\nexport const fetchAllContactsSuccess = createAction(\r\n  'contacts/fetchAllContactsSuccess',\r\n);\r\nexport const fetchAllContactsError = createAction(\r\n  'contacts/fetchAllContactsError',\r\n);\r\n\r\nexport const addNewContactRequest = createAction(\r\n  'addNewContactRequest',\r\n);\r\nexport const addNewContactSuccess = createAction(\r\n  'contacts/addNewContactSuccess',\r\n);\r\nexport const addNewContactError = createAction(\r\n  'contacts/addNewContactError',\r\n);\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction(\r\n  'contacts/deleteContactError',\r\n);\r\n\r\n// export const deleteContact = createAction(\r\n//   'contacts/deleteContact',\r\n// );\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchAllContactsRequest,\r\n  fetchAllContactsSuccess,\r\n  fetchAllContactsError,\r\n  addNewContactRequest,\r\n  addNewContactSuccess,\r\n  addNewContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './items-actions';\r\n\r\nexport const itemsReduser = createReducer([], {\r\n  [fetchAllContactsSuccess]: (state, { payload }) =>\r\n    payload,\r\n\r\n  [addNewContactSuccess]: (state, { payload }) => {\r\n    console.log('ADD');\r\n    // if (\r\n    //   state.find(contact => contact.name === payload.name)\r\n    // ) {\r\n    //   alert(`${payload.name} is already in contacts`);\r\n    //   return state;\r\n    // } else return [payload, ...state];\r\n    return [payload, ...state];\r\n  },\r\n\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload.id),\r\n});\r\n\r\nexport const isLoadingReduser = createReducer(false, {\r\n  [fetchAllContactsRequest]: () => true,\r\n  [fetchAllContactsSuccess]: () => false,\r\n  [fetchAllContactsError]: () => false,\r\n  [addNewContactRequest]: () => true,\r\n  [addNewContactSuccess]: () => false,\r\n  [addNewContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\n// export default itemsReduser;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeFilter = createAction('filter/changeFilter');\r\n\r\nexport default changeFilter;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport changeFilter from './filter-actions';\r\n\r\nconst filterReduser = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default filterReduser;\r\n","import { combineReducers } from 'redux';\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\n// import { persistStore } from 'redux-persist';\r\n\r\nimport {\r\n  itemsReduser,\r\n  isLoadingReduser,\r\n} from './items/items-reducer';\r\nimport filterReduser from './filter/filter-reducer';\r\nimport {\r\n  FLUSH,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from 'redux-persist/es/constants';\r\n\r\n// const persistConfig = {\r\n//   key: 'phonebook',\r\n//   storage,\r\n// };\r\n\r\nconst contactsReduser = combineReducers({\r\n  items: itemsReduser,\r\n  filter: filterReduser,\r\n  isLoading: isLoadingReduser,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReduser,\r\n});\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [\r\n        FLUSH,\r\n        REHYDRATE,\r\n        PAUSE,\r\n        PERSIST,\r\n        PURGE,\r\n        REGISTER,\r\n      ],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n// export default { store, persistor };\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:3000/contacts';\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport async function fetchAllContacts() {\r\n  const { data } = await axios.get('');\r\n  return data;\r\n}\r\nexport function addNewContact(contact) {\r\n  return axios.post('', contact);\r\n}\r\n\r\nexport function deleteContactById(contactId) {\r\n  console.log(contactId);\r\n  return axios.delete(`${contactId}`);\r\n}\r\n","import {\r\n  fetchAllContacts,\r\n  addNewContact,\r\n  deleteContactById,\r\n} from '../../services/api';\r\n\r\nimport {\r\n  fetchAllContactsRequest,\r\n  fetchAllContactsSuccess,\r\n  fetchAllContactsError,\r\n  addNewContactRequest,\r\n  addNewContactSuccess,\r\n  addNewContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './items-actions';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchAllContactsRequest());\r\n\r\n  try {\r\n    const contacts = await fetchAllContacts();\r\n    dispatch(fetchAllContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(fetchAllContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = contact => dispatch => {\r\n  dispatch(addNewContactRequest());\r\n\r\n  addNewContact(contact)\r\n    .then(({ data }) => {\r\n      console.log(data);\r\n      return dispatch(addNewContactSuccess(data));\r\n    })\r\n    .catch(error => dispatch(addNewContactError(error)));\r\n};\r\n\r\nexport const deleteContact = contact => dispatch => {\r\n  console.log(contact);\r\n  dispatch(deleteContactRequest());\r\n\r\n  deleteContactById(contact.id)\r\n    .then(() => dispatch(deleteContactSuccess(contact)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getContactsFilter = state =>\r\n  state.contacts.filter;\r\nexport const getContactsIsLoading = state =>\r\n  state.contacts.isLoadong;\r\nexport const getContactsItems = state =>\r\n  state.contacts.items;\r\n\r\n// export const getContactsFilteredItems = state => {\r\n//   const items = getContactsItems(state);\r\n//   const filter = getContactsFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return items.filter(contact =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n\r\nexport const getContactsFilteredItems = createSelector(\r\n  [getContactsItems, getContactsFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return items.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.filter}>\r\n      <span className={s.text}>Find contacts by name:</span>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\nimport s from './Section.module.css';\r\n\r\nclass Section extends Component {\r\n  normalizedTitle = t => {\r\n    return t[0].toUpperCase() + t.slice(1);\r\n  };\r\n\r\n  render() {\r\n    const { title, children } = this.props;\r\n    return (\r\n      <section className={s.section}>\r\n        {title ? (\r\n          <h2 className={s.title}>{this.normalizedTitle(title)}</h2>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {children}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './AddContactForm.module.css';\r\n\r\nclass AddContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  normalizedTitle = t => {\r\n    return t[0].toUpperCase() + t.slice(1);\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { contacts, onSubmit } = this.props;\r\n    e.preventDefault();\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name === this.state.name,\r\n      )\r\n    ) {\r\n      alert(`${this.state.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form\r\n        onSubmit={this.handleSubmit}\r\n        className={s.addContactForm}\r\n      >\r\n        <div className={s.formItem}>\r\n          <label htmlFor={this.nameInputId}>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            id={this.nameInputId}\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className={s.formItem}>\r\n          <label htmlFor={this.numberInputId}>\r\n            {' '}\r\n            Number{' '}\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            placeholder=\"Enter phone number\"\r\n            name=\"number\"\r\n            id={this.numberInputId}\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!name}\r\n          className={`btn btn-success ${s.formItem} ${s.formBtn}`}\r\n        >\r\n          <span className={s.btnText}> Add Contact</span>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContactForm;\r\n","import { Component } from 'react';\r\nimport s from './ContactsList.module.css';\r\n\r\nclass ContactsList extends Component {\r\n  normalizedTitle = t => {\r\n    return t[0].toUpperCase() + t.slice(1);\r\n  };\r\n\r\n  render() {\r\n    const { contacts, onDeleteContact } = this.props;\r\n\r\n    return (\r\n      <ul className={s.list}>\r\n        {contacts.length > 0\r\n          ? contacts.map(contact => (\r\n              <li\r\n                className={s.contactItem}\r\n                key={contact.id}\r\n                name={contact.name}\r\n              >\r\n                <span className={s.contactData}>\r\n                  {this.normalizedTitle(contact.name)} : {contact.number}\r\n                </span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"deleteBtn btn btn-outline-dark\"\r\n                  onClick={() => onDeleteContact(contact)}\r\n                >\r\n                  Удалить\r\n                </button>\r\n              </li>\r\n            ))\r\n          : 'No contacts added yet.'}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsList;\r\n","import { connect, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport './App.css';\n\nimport changeFilter from './redux/filter/filter-actions';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './redux/items/items-operations';\nimport {\n  getContactsFilter,\n  getContactsFilteredItems,\n  getContactsIsLoading,\n} from './redux/items/items-selectors';\n\nimport Filter from './components/Filter';\nimport Section from './components/Section';\nimport Container from './components/Container';\nimport AddContactForm from './components/AddContactForm';\nimport ContactsList from './components/ContactsList';\n\nfunction App({\n  contacts,\n  filter,\n  onAddContact,\n  onDeleteContact,\n  onChangeFilter,\n}) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1 className=\"appTitle\">Phonebook</h1>\n      <Section>\n        <AddContactForm\n          onSubmit={value => onAddContact(value)}\n          contacts={contacts}\n        />\n      </Section>\n      <Section title=\"contacts\">\n        <Filter\n          value={filter}\n          onChange={e =>\n            onChangeFilter(e.currentTarget.value)\n          }\n        />\n        <ContactsList\n          contacts={contacts}\n          onDeleteContact={value => onDeleteContact(value)}\n        />\n      </Section>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getContactsFilteredItems(state),\n    filter: getContactsFilter(state),\n    isLoading: getContactsIsLoading(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddContact: value => dispatch(addContact(value)),\n    onDeleteContact: value =>\n      dispatch(deleteContact(value)),\n    onChangeFilter: value => dispatch(changeFilter(value)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactForm\":\"AddContactForm_addContactForm__1aE0x\",\"formItem\":\"AddContactForm_formItem__1dz3D\",\"formBtn\":\"AddContactForm_formBtn__1DfEO\",\"btnText\":\"AddContactForm_btnText__1d-5J\"};"],"sourceRoot":""}